name: Build BoringSSL for Android

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [armeabi-v7a, arm64-v8a, x86, x86_64]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Android NDK
      id: setup-ndk
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r28b

    - name: Configure build variables
      run: |
        echo "NDK_ROOT=${{ steps.setup-ndk.outputs.ndk-path }}" >> $GITHUB_ENV
        case "${{ matrix.arch }}" in
          armeabi-v7a) 
            echo "ANDROID_ABI=armeabi-v7a" >> $GITHUB_ENV
            echo "ANDROID_PLATFORM=android-21" >> $GITHUB_ENV
            echo "ARCH_FLAGS=-mfpu=neon" >> $GITHUB_ENV ;;
          arm64-v8a) 
            echo "ANDROID_ABI=arm64-v8a" >> $GITHUB_ENV
            echo "ANDROID_PLATFORM=android-21" >> $GITHUB_ENV
            echo "ARCH_FLAGS=-march=armv8-a+crypto" >> $GITHUB_ENV ;;
          x86) 
            echo "ANDROID_ABI=x86" >> $GITHUB_ENV
            echo "ANDROID_PLATFORM=android-21" >> $GITHUB_ENV
            echo "ARCH_FLAGS=-msse4.2 -maes" >> $GITHUB_ENV ;;
          x86_64) 
            echo "ANDROID_ABI=x86_64" >> $GITHUB_ENV
            echo "ANDROID_PLATFORM=android-21" >> $GITHUB_ENV
            echo "ARCH_FLAGS=-msse4.2 -maes -mavx" >> $GITHUB_ENV ;;
        esac
        echo "CMAKE_TOOLCHAIN_FILE=$NDK_ROOT/build/cmake/android.toolchain.cmake" >> $GITHUB_ENV

    - name: Print build variables
      run: |
        echo "NDK_ROOT=$NDK_ROOT"
        echo "CMAKE_TOOLCHAIN_FILE=$CMAKE_TOOLCHAIN_FILE"
        echo "ANDROID_ABI=$ANDROID_ABI"
        echo "ANDROID_PLATFORM=$ANDROID_PLATFORM"
        echo "ARCH_FLAGS=$ARCH_FLAGS"

    - name: Apply minimal configuration
      working-directory: boringssl
      run: |
        sed -i '/d1_both\.cc/d;/d1_lib\.cc/d;/d1_pkt\.cc/d;/d1_srtp\.cc/d' CMakeLists.txt
        sed -i '/_test\.cc/d;/test_.*\.cc/d' CMakeLists.txt
        sed -i '/^project(BoringSSL/a\
        add_definitions(-DOPENSSL_NO_DTLS -DOPENSSL_NO_PSK -DOPENSSL_NO_LEGACY_ALGORITHMS -DOPENSSL_NO_WEAK_SSL_CIPHERS)' CMakeLists.txt
        echo "return()" > ssl/test/CMakeLists.txt
        echo "return()" > crypto/test/CMakeLists.txt

    - name: Configure CMake
      run: |
        mkdir -p boringssl/build-${{ matrix.arch }}
        cd boringssl/build-${{ matrix.arch }}
        cmake .. \
          -G Ninja \
          -DCMAKE_TOOLCHAIN_FILE="$CMAKE_TOOLCHAIN_FILE" \
          -DANDROID_ABI="$ANDROID_ABI" \
          -DANDROID_PLATFORM="$ANDROID_PLATFORM" \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_C_FLAGS="-O2 -DNDEBUG $ARCH_FLAGS -fvisibility=hidden -ffunction-sections -fdata-sections" \
          -DCMAKE_CXX_FLAGS="-O2 -DNDEBUG $ARCH_FLAGS -fno-rtti -fno-exceptions" \
          -DCMAKE_EXE_LINKER_FLAGS="-Wl,--gc-sections -Wl,--strip-all" \
          -DBUILD_SHARED_LIBS=OFF \
          -DANDROID_STL=c++_static \
          -DBUILD_TESTING=OFF \
          -DBUILD_TOOLS=OFF

    - name: Build
      run: |
        cd boringssl/build-${{ matrix.arch }}
        ninja crypto ssl

    - name: Upload CMake logs (on failure)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: cmake-logs-${{ matrix.arch }}
        path: boringssl/build-${{ matrix.arch }}/CMakeFiles/CMake*.log
