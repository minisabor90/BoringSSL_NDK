name: Build Minimal BoringSSL for Android (HTTP/3 Optimized)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-boringssl-minimal:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        arch: [armeabi-v7a, arm64-v8a, x86, x86_64]

    steps:
    - name: Checkout BoringSSL release 0.20250701.0
      uses: actions/checkout@v4
      with:
        repository: google/boringssl
        ref: 0.20250701.0
        path: boringssl
        submodules: recursive

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android NDK
      uses: nttld/setup-ndk@v1
      id: setup-ndk
      with:
        ndk-version: r28b
        add-to-path: false

    - name: Install build tools
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake ninja-build python3 python3-pip
        python3 -m pip install --upgrade pip

    - name: Apply minimal CMake patch
      run: |
        cd boringssl
        # patch out DTLS, tests, fipsmodule
        cp CMakeLists.txt CMakeLists.minimal.txt
        sed -i '/add_subdirectory(crypto\/fipsmodule)/d' CMakeLists.txt
        sed -i '/add_subdirectory(ssl\/test)/d' CMakeLists.txt
        sed -i '/add_subdirectory(crypto\/test)/d' CMakeLists.txt
        sed -i '/d1_both\.cc/d' CMakeLists.txt
        sed -i '/d1_lib\.cc/d'   CMakeLists.txt
        sed -i '/d1_pkt\.cc/d'   CMakeLists.txt
        sed -i '/d1_srtp\.cc/d'  CMakeLists.txt
        sed -i '/_test\.cc/d'    CMakeLists.txt
        sed -i '/test_.*\.cc/d'  CMakeLists.txt
        # insert minimal options
        sed -i '/^project(BoringSSL/a\\
# minimal build config\n\
option(BUILD_TESTING \"Build tests\" OFF)\n\
option(BUILD_TOOLS   \"Build tools\" OFF)\n\
set(BUILD_TESTING OFF CACHE BOOL \"Build tests\" FORCE)\n\
set(BUILD_TOOLS OFF CACHE BOOL \"Build tools\" FORCE)\n\
add_definitions(-DOPENSSL_SMALL_CODE)\n\
add_definitions(-DOPENSSL_NO_LEGACY_ALGORITHMS)\n\
add_definitions(-DOPENSSL_NO_WEAK_SSL_CIPHERS)\n\
add_definitions(-DOPENSSL_NO_DTLS)\n\
add_definitions(-DOPENSSL_NO_PSK)\n\
add_definitions(-DOPENSSL_NO_SRP)\n' CMakeLists.txt

    - name: Configure environment
      run: |
        NDK_PATH="${{ steps.setup-ndk.outputs.ndk-path }}"
        echo "NDK_ROOT=$NDK_PATH" >> $GITHUB_ENV
        case "${{ matrix.arch }}" in
          armeabi-v7a)
            echo "ANDROID_ABI=armeabi-v7a" >> $GITHUB_ENV
            echo "ANDROID_PLATFORM=android-21" >> $GITHUB_ENV
            echo "ARCH_FLAGS=-mfpu=neon" >> $GITHUB_ENV
            ;;
          arm64-v8a)
            echo "ANDROID_ABI=arm64-v8a" >> $GITHUB_ENV
            echo "ANDROID_PLATFORM=android-21" >> $GITHUB_ENV
            echo "ARCH_FLAGS=-march=armv8-a+crypto" >> $GITHUB_ENV
            ;;
          x86)
            echo "ANDROID_ABI=x86" >> $GITHUB_ENV
            echo "ANDROID_PLATFORM=android-21" >> $GITHUB_ENV
            echo "ARCH_FLAGS=-msse4.2 -maes" >> $GITHUB_ENV
            ;;
          x86_64)
            echo "ANDROID_ABI=x86_64" >> $GITHUB_ENV
            echo "ANDROID_PLATFORM=android-21" >> $GITHUB_ENV
            echo "ARCH_FLAGS=-msse4.2 -maes -mavx" >> $GITHUB_ENV
            ;;
        esac
        echo "CMAKE_TOOLCHAIN_FILE=$NDK_ROOT/build/cmake/android.toolchain.cmake" >> $GITHUB_ENV

    - name: Create build dir
      run: mkdir -p boringssl/build-${{ matrix.arch }}

    - name: CMake & build shared libs
      run: |
        cd boringssl/build-${{ matrix.arch }}
        COMMON_FLAGS="-Os -DNDEBUG -ffunction-sections -fdata-sections -fvisibility=hidden -fvisibility-inlines-hidden -flto=thin"
        COMMON_FLAGS="$COMMON_FLAGS -DOPENSSL_SMALL_CODE -DOPENSSL_NO_LEGACY_ALGORITHMS -DOPENSSL_NO_WEAK_SSL_CIPHERS -DOPENSSL_NO_DTLS -DOPENSSL_NO_PSK -DOPENSSL_NO_SRP"
        COMMON_FLAGS="$COMMON_FLAGS $ARCH_FLAGS"
        cmake .. \
          -G Ninja \
          -DCMAKE_TOOLCHAIN_FILE="$CMAKE_TOOLCHAIN_FILE" \
          -DANDROID_ABI="$ANDROID_ABI" \
          -DANDROID_PLATFORM="$ANDROID_PLATFORM" \
          -DCMAKE_BUILD_TYPE=MinSizeRel \
          -DBUILD_SHARED_LIBS=ON \
          -DBUILD_STATIC_LIBS=OFF \
          -DCMAKE_C_FLAGS="$COMMON_FLAGS" \
          -DCMAKE_CXX_FLAGS="$COMMON_FLAGS -fno-rtti -fno-exceptions" \
          -DCMAKE_SHARED_LINKER_FLAGS="-Wl,--gc-sections -Wl,--strip-all -flto=thin" \
          -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON \
          -DBUILD_TESTING=OFF \
          -DBUILD_TOOLS=OFF
        ninja ssl crypto

    - name: Verify & strip .so
      run: |
        cd boringssl/build-${{ matrix.arch }}
        SSL_SO=$(find . -name "libssl.so" | head -1)
        CRYPTO_SO=$(find . -name "libcrypto.so" | head -1)
        echo "Before strip:" && ls -lh "$SSL_SO" "$CRYPTO_SO"
        strip --strip-unneeded "$SSL_SO" "$CRYPTO_SO"
        echo "After strip:" && ls -lh "$SSL_SO" "$CRYPTO_SO"
        echo "Copying to artifacts..."
        mkdir -p ../../artifacts/${{ matrix.arch }}/lib
        cp "$SSL_SO" "$CRYPTO_SO" ../../artifacts/${{ matrix.arch }}/lib/

    - name: Install headers
      run: |
        mkdir -p artifacts/${{ matrix.arch }}/include/openssl
        cp boringssl/include/openssl/*.h artifacts/${{ matrix.arch }}/include/openssl/

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: boringssl-minimal-android-${{ matrix.arch }}
        path: artifacts/${{ matrix.arch }}
        retention-days: 30

  package-minimal-release:
    needs: build-boringssl-minimal
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4

    - name: Package release
      run: |
        mkdir -p release/android
        cp -r boringssl-minimal-android-* release/android/
        cd release/android
        tar czf boringssl-minimal-android.tar.gz *
        ls -lh boringssl-minimal-android.tar.gz

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: boringssl-no-dtls-0.20250701.0-${{ github.run_number }}
        name: BoringSSL Ultra-Minimal Android Shared (HTTP/3) ðŸš€
        body: |
          Shared-library build only (~2â€“3 MB each)
          - libcrypto.so
          - libssl.so
          DTLS, tests, tools, fipsmodule removed. Optimized for HTTP/3.
